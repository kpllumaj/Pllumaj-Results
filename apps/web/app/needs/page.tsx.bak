"use client";
import { useEffect, useState } from "react";
import Link from "next/link";
import { useAuthRedirect } from "@/hooks/useAuthRedirect";

type Need = {
  id: string;
  title: string;
  description: string;
  budgetAmount: number | null;
  budgetCurrency: string;
  createdAt: string;
};

const API_BASE = process.env.NEXT_PUBLIC_API_URL ?? "http://localhost:3001";

export default function NeedsListPage() {
  const checking = useAuthRedirect();
  const [needs, setNeeds] = useState<Need[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (checking) return;

    fetch(`${API_BASE}/needs`)
      .then((res) => res.json())
      .then((data) => {
        if (Array.isArray(data)) {
          setNeeds(data);
        } else {
          console.error("Unexpected needs response", data);
          setNeeds([]);
        }
      })
      .catch((err) => console.error("Error fetching needs:", err))
      .finally(() => setLoading(false));
  }, [checking]);

  if (checking) {
    return <p className="p-6 text-center text-gray-500">Checking access...</p>;
  }

  if (loading) return <p className="p-6 text-center text-gray-500">Loading...</p>;

  return (
    <div className="mx-auto max-w-3xl space-y-4 p-6">
      <h1 className="mb-4 text-3xl font-bold">All Posted Needs</h1>
      {needs.length === 0 ? (
        <p>No needs posted yet.</p>
      ) : (
        <ul className="space-y-4">
          {needs.map((need) => (
            <li
              key={need.id}
              className="rounded-lg border p-4 shadow-sm transition hover:bg-gray-50"
            >
              <Link href={`/needs/${need.id}`}>
                <h2 className="text-xl font-semibold text-blue-600 hover:underline">
                  {need.title}
                </h2>
              </Link>
              <p className="text-gray-700">{need.description}</p>
              {need.budgetAmount && (
                <p className="text-sm text-gray-500">
                  Budget: {need.budgetAmount} {need.budgetCurrency}
                </p>
              )}
              <p className="text-xs text-gray-400">
                Posted on {new Date(need.createdAt).toLocaleString()}
              </p>
            </li>
          ))}
        </ul>
      )}
    </div>
  );
}
